{"ast":null,"code":"var _jsxFileName = \"/Users/dkothandapani/Downloads/movie-app-react-typescript/src/components/Movie/Movie.tsx\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/globalActions\";\nimport { Detail, ErrorMessage, Genres, MovieDetails, MovieOverviewContainer, Page, PageTitle, StyledChip } from \"../../styling/StyledComponents\";\nimport { Avatar, Divider } from \"@material-ui/core\";\nimport { Runtime } from \"../SharedComponents/Runtime\";\nimport { MovieRating } from \"../SharedComponents/Ratings\";\nimport MovieCrewTable from \"./MovieFilmographyTable\";\n\nclass Movie extends React.Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.find_movie(id);\n  }\n\n  componentWillUnmount() {\n    this.props.clear_search_state();\n  }\n\n  render() {\n    if (this.props.apiError) {\n      return /*#__PURE__*/React.createElement(ErrorMessage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }\n      }, this.props.errorMessage);\n    }\n\n    return /*#__PURE__*/React.createElement(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MovieOverviewContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MovieRating, {\n      rating: this.props.rating,\n      votes: this.props.votes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MovieDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Detail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, this.props.year), /*#__PURE__*/React.createElement(Detail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Runtime, {\n      runtime: this.props.runtime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Genres, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.props.genres.map((genre, i) => {\n      const genreIcon = ['action', 'adventure', 'biography', 'comedy', 'crime', 'drama', 'fantasy', 'history', 'horror', 'mystery', 'sci-fi', 'thriller', 'war'].indexOf(genre) > -1 ? genre : \"other\";\n      return /*#__PURE__*/React.createElement(StyledChip, {\n        key: i,\n        icon: /*#__PURE__*/React.createElement(Avatar, {\n          src: require(`../../icons/${genreIcon}.png`),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 63\n          }\n        }),\n        label: genre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MovieCrewTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    movieId: state.id,\n    title: state.title,\n    genres: state.genres,\n    year: state.year,\n    runtime: state.runtime,\n    rating: state.rating,\n    votes: state.votes,\n    directors: state.directors,\n    writers: state.writers,\n    apiError: state.apiError,\n    errorMessage: state.errorMessage\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    find_movie: movie => dispatch(actionCreators.findMovie(movie)),\n    clear_search_state: () => dispatch(actionCreators.resetState())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","map":{"version":3,"sources":["/Users/dkothandapani/Downloads/movie-app-react-typescript/src/components/Movie/Movie.tsx"],"names":["React","connect","actionCreators","Detail","ErrorMessage","Genres","MovieDetails","MovieOverviewContainer","Page","PageTitle","StyledChip","Avatar","Divider","Runtime","MovieRating","MovieCrewTable","Movie","Component","componentDidMount","id","props","match","params","find_movie","componentWillUnmount","clear_search_state","render","apiError","errorMessage","title","rating","votes","year","runtime","genres","map","genre","i","genreIcon","indexOf","require","mapStateToProps","state","movieId","directors","writers","mapDispatchToProps","dispatch","movie","findMovie","resetState"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/globalActions\";\nimport {\n    Detail, ErrorMessage,\n    Genres,\n    MovieDetails,\n    MovieOverviewContainer,\n    Page,\n    PageTitle,\n    StyledChip\n} from \"../../styling/StyledComponents\";\nimport {Avatar, Divider} from \"@material-ui/core\";\nimport {Runtime} from \"../SharedComponents/Runtime\";\nimport {MovieRating} from \"../SharedComponents/Ratings\";\nimport MovieCrewTable from \"./MovieFilmographyTable\";\n\ninterface IMovieProps {\n    id: string,\n    find_movie: (movie: any) => void,\n    match: any,\n    title: string,\n    genres: [],\n    year: number,\n    runtime: number,\n    rating: number,\n    votes: number,\n    directors: [],\n    writers: [],\n    crew: any,\n    search_movies: (searchTerm: string) => void,\n    movieSummaries: [],\n    currentPage: number,\n    resultsTotal: number,\n    change_page: (event: any, newPage: number) => void,\n    all_movies: () => void,\n    change_rows_per_page: (event: any) => void,\n    onRequestSort: (event: any, property: any) => void,\n    clear_search_state: () => void,\n    apiError: boolean,\n    errorMessage: string\n}\n\n\nclass Movie extends React.Component<IMovieProps> {\n    componentDidMount(): void {\n\n        const id = this.props.match.params.id\n        this.props.find_movie(id)\n    }\n\n    componentWillUnmount(): void {\n        this.props.clear_search_state()\n    }\n\n\n    render() {\n\n        if (this.props.apiError) {\n            return <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\n        }\n\n        return (\n            <Page>\n                <PageTitle>\n                    {this.props.title}\n                </PageTitle>\n                <Divider />\n                <Divider />\n                <MovieOverviewContainer>\n                    <MovieRating rating={this.props.rating} votes={this.props.votes}/>\n                    <MovieDetails>\n                        <Detail>\n                            {this.props.year}\n                        </Detail>\n                        <Detail>\n                            <Runtime runtime={this.props.runtime}/>\n                        </Detail>\n                    </MovieDetails>\n                    <Genres>\n                        {this.props.genres.map((genre: string, i: number) => {\n                                const genreIcon = ['action', 'adventure', 'biography', 'comedy', 'crime', 'drama', 'fantasy', 'history', 'horror', 'mystery', 'sci-fi', 'thriller', 'war'].indexOf(genre) > -1 ? genre : \"other\"\n                                return (\n                                    <StyledChip key={i} icon={<Avatar src={require(`../../icons/${genreIcon}.png`)}/>}\n                                                label={genre}/>  )\n                            }\n                        )}\n                    </Genres>\n                </MovieOverviewContainer>\n                <Divider />\n                <Divider />\n\n     <MovieCrewTable/>\n\n\n            </Page>\n        )\n    }\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        movieId: state.id,\n        title: state.title,\n        genres: state.genres,\n        year: state.year,\n        runtime: state.runtime,\n        rating: state.rating,\n        votes: state.votes,\n        directors: state.directors,\n        writers: state.writers,\n        apiError: state.apiError,\n        errorMessage: state.errorMessage\n    }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        find_movie: (movie: string) => dispatch(actionCreators.findMovie(movie)),\n        clear_search_state: () => dispatch(actionCreators.resetState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);"]},"metadata":{},"sourceType":"module"}