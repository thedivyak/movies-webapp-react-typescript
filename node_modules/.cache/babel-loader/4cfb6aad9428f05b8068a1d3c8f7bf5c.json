{"ast":null,"code":"import * as actionTypes from './actions/globalActionTypes';\nimport { UnfoldMore } from \"@material-ui/icons\";\nexport const initialState = {\n  searchTerm: '',\n  movieSummaries: [],\n  searchResultsTotal: 0,\n  currentPage: 0,\n  rowsPerPage: 10,\n  orderBy: {\n    'rating': {\n      sort: 'desc',\n      icon: UnfoldMore\n    },\n    'title': {\n      sort: 'asc',\n      icon: UnfoldMore\n    }\n  },\n  movieId: '',\n  title: '',\n  genres: [],\n  year: 0,\n  runtime: 0,\n  rating: 0,\n  votes: 0,\n  directors: [],\n  writers: [],\n  crewId: '',\n  name: '',\n  crewMovies: [],\n  crew: {},\n  errorMessage: 'Sorry, no matching movies found.'\n};\n\nconst updateObject = (oldObject, updatedValues) => ({ ...oldObject,\n  ...updatedValues\n});\n\nexport const mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TRIGGER_SEARCH:\n      return updateObject(state, action.newState);\n\n    case actionTypes.TRIGGER_MOVIE:\n      return updateObject(state, action.newState);\n\n    case actionTypes.TRIGGER_CREW:\n      return updateObject(state, action.newState);\n\n    case actionTypes.RESET_STATE:\n      return updateObject(state, initialState);\n\n    case actionTypes.API_FAILURE:\n      return updateObject(state, action.newState);\n\n    case actionTypes.CREATE_CREW_MOVIE:\n      return { ...state,\n        movieSummaries: [...state.movieSummaries, action.newState.newMovie]\n      };\n\n    default:\n      return state;\n  }\n};\nexport default mainReducer;","map":{"version":3,"sources":["/Users/dkothandapani/Downloads/movie-app-react-typescript/src/store/mainReducer.tsx"],"names":["actionTypes","UnfoldMore","initialState","searchTerm","movieSummaries","searchResultsTotal","currentPage","rowsPerPage","orderBy","sort","icon","movieId","title","genres","year","runtime","rating","votes","directors","writers","crewId","name","crewMovies","crew","errorMessage","updateObject","oldObject","updatedValues","mainReducer","state","action","type","TRIGGER_SEARCH","newState","TRIGGER_MOVIE","TRIGGER_CREW","RESET_STATE","API_FAILURE","CREATE_CREW_MOVIE","newMovie"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAGA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,EADY;AAExBC,EAAAA,cAAc,EAAE,EAFQ;AAGxBC,EAAAA,kBAAkB,EAAE,CAHI;AAIxBC,EAAAA,WAAW,EAAE,CAJW;AAKxBC,EAAAA,WAAW,EAAE,EALW;AAMxBC,EAAAA,OAAO,EAAE;AAAC,cAAU;AAACC,MAAAA,IAAI,EAAC,MAAN;AAAcC,MAAAA,IAAI,EAACT;AAAnB,KAAX;AAA2C,aAAS;AAACQ,MAAAA,IAAI,EAAC,KAAN;AAAaC,MAAAA,IAAI,EAACT;AAAlB;AAApD,GANe;AAOxBU,EAAAA,OAAO,EAAE,EAPe;AAQxBC,EAAAA,KAAK,EAAE,EARiB;AASxBC,EAAAA,MAAM,EAAE,EATgB;AAUxBC,EAAAA,IAAI,EAAE,CAVkB;AAWxBC,EAAAA,OAAO,EAAE,CAXe;AAYxBC,EAAAA,MAAM,EAAE,CAZgB;AAaxBC,EAAAA,KAAK,EAAE,CAbiB;AAcxBC,EAAAA,SAAS,EAAE,EAda;AAexBC,EAAAA,OAAO,EAAE,EAfe;AAgBxBC,EAAAA,MAAM,EAAC,EAhBiB;AAiBxBC,EAAAA,IAAI,EAAE,EAjBkB;AAkBxBC,EAAAA,UAAU,EAAE,EAlBY;AAmBxBC,EAAAA,IAAI,EAAE,EAnBkB;AAoBxBC,EAAAA,YAAY,EAAE;AApBU,CAArB;;AAuBP,MAAMC,YAAY,GAAG,CAACC,SAAD,EAAiBC,aAAjB,MAAyC,EAC1D,GAAGD,SADuD;AAE1D,KAAGC;AAFuD,CAAzC,CAArB;;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG3B,YAAT,EAAuB4B,MAAvB,KAAiE;AACxF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK/B,WAAW,CAACgC,cAAjB;AACI,aAAOP,YAAY,CAACI,KAAD,EAAQC,MAAM,CAACG,QAAf,CAAnB;;AACJ,SAAKjC,WAAW,CAACkC,aAAjB;AACI,aAAOT,YAAY,CAACI,KAAD,EAAQC,MAAM,CAACG,QAAf,CAAnB;;AACJ,SAAKjC,WAAW,CAACmC,YAAjB;AACI,aAAOV,YAAY,CAACI,KAAD,EAAQC,MAAM,CAACG,QAAf,CAAnB;;AACJ,SAAKjC,WAAW,CAACoC,WAAjB;AACI,aAAOX,YAAY,CAACI,KAAD,EAAQ3B,YAAR,CAAnB;;AACJ,SAAKF,WAAW,CAACqC,WAAjB;AACI,aAAOZ,YAAY,CAACI,KAAD,EAAQC,MAAM,CAACG,QAAf,CAAnB;;AACJ,SAAKjC,WAAW,CAACsC,iBAAjB;AACI,aAAO,EACH,GAAGT,KADA;AAEHzB,QAAAA,cAAc,EAAE,CAAC,GAAGyB,KAAK,CAACzB,cAAV,EAA0B0B,MAAM,CAACG,QAAP,CAAgBM,QAA1C;AAFb,OAAP;;AAIJ;AACI,aAAOV,KAAP;AAjBR;AAmBH,CApBM;AAsBP,eAAeD,WAAf","sourcesContent":["import * as actionTypes from './actions/globalActionTypes'\nimport {UnfoldMore} from \"@material-ui/icons\";\nimport * as React from \"react\";\n\nexport const initialState = {\n    searchTerm: '',\n    movieSummaries: [],\n    searchResultsTotal: 0,\n    currentPage: 0,\n    rowsPerPage: 10,\n    orderBy: {'rating': {sort:'desc', icon:UnfoldMore}, 'title': {sort:'asc', icon:UnfoldMore}},\n    movieId: '',\n    title: '',\n    genres: [],\n    year: 0,\n    runtime: 0,\n    rating: 0,\n    votes: 0,\n    directors: [],\n    writers: [],\n    crewId:'',\n    name: '',\n    crewMovies: [],\n    crew: {},\n    errorMessage: 'Sorry, no matching movies found.'\n}\n\nconst updateObject = (oldObject: any, updatedValues: any) => ({\n    ...oldObject,\n    ...updatedValues\n});\n\nexport const mainReducer = (state = initialState, action: { type: any; newState: any; }) => {\n    switch(action.type) {\n        case actionTypes.TRIGGER_SEARCH:\n            return updateObject(state, action.newState)\n        case actionTypes.TRIGGER_MOVIE:\n            return updateObject(state, action.newState)\n        case actionTypes.TRIGGER_CREW:\n            return updateObject(state, action.newState)\n        case actionTypes.RESET_STATE:\n            return updateObject(state, initialState)\n        case actionTypes.API_FAILURE:\n            return updateObject(state, action.newState)\n        case actionTypes.CREATE_CREW_MOVIE:\n            return {\n                ...state,\n                movieSummaries: [...state.movieSummaries, action.newState.newMovie]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default mainReducer;"]},"metadata":{},"sourceType":"module"}