{"ast":null,"code":"var _jsxFileName = \"/Users/dkothandapani/Downloads/movie-app-react-typescript/src/components/Search/Search.tsx\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/globalActions\";\nimport { ErrorMessage, Page, PageTitle, SearchBar, SearchBarContainer, SearchResults } from \"../../styling/StyledComponents\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport ResultsTable from \"../MovieSummariesTable/ResultsTable\";\nimport { TablePagination } from \"@material-ui/core\";\nimport { pageIconColor } from \"../../styling/mainTheme\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.all_movies();\n  }\n\n  componentWillUnmount() {\n    this.props.clear_search_state();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Page, {\n      \"data-testid\": \"search-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(SearchBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      style: {\n        color: `${pageIconColor}`,\n        fontSize: 60\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      variant: \"outlined\",\n      type: \"search\",\n      onChange: e => {\n        this.setState({\n          searchTerm: e.target.value\n        });\n        this.props.search_movies(e.target.value);\n      },\n      label: \"Search by Title, Genre, Director, or Writer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })), this.props.resultsTotal > 0 && /*#__PURE__*/React.createElement(SearchResults, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ResultsTable, {\n      value: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25, 50],\n      component: \"div\",\n      count: this.props.resultsTotal,\n      rowsPerPage: this.props.rowsPerPage,\n      page: this.props.currentPage,\n      onChangePage: (e, newPage) => this.props.change_page(e, newPage),\n      onChangeRowsPerPage: e => this.props.change_rows_per_page(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })), this.props.resultsTotal === 0 && (this.state.searchTerm !== \"\" || this.props.apiError) && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, this.props.errorMessage));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    searchTerm: state.searchTerm,\n    movieSummaries: state.movieSummaries,\n    searchResultsTotal: state.searchResultsTotal,\n    currentPage: state.currentPage,\n    rowsPerPage: state.rowsPerPage,\n    resultsTotal: state.searchResultsTotal,\n    errorMessage: state.errorMessage,\n    apiError: state.apiError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    change_page: (event, newPage) => dispatch(actionCreators.changePage(event, newPage)),\n    search_movies: searchTerm => dispatch(actionCreators.searchMovies(searchTerm)),\n    all_movies: () => dispatch(actionCreators.allMovies()),\n    change_rows_per_page: event => dispatch(actionCreators.changeRowsPerPage(event)),\n    on_request_sort: (event, property) => dispatch(actionCreators.sortByTitleOrRating(event, property)),\n    clear_search_state: () => dispatch(actionCreators.resetState())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/dkothandapani/Downloads/movie-app-react-typescript/src/components/Search/Search.tsx"],"names":["React","Component","connect","actionCreators","ErrorMessage","Page","PageTitle","SearchBar","SearchBarContainer","SearchResults","Search","SearchIcon","ResultsTable","TablePagination","pageIconColor","constructor","props","state","searchTerm","componentDidMount","all_movies","componentWillUnmount","clear_search_state","render","color","fontSize","e","setState","target","value","search_movies","resultsTotal","rowsPerPage","currentPage","newPage","change_page","change_rows_per_page","apiError","errorMessage","mapStateToProps","movieSummaries","searchResultsTotal","mapDispatchToProps","dispatch","event","changePage","searchMovies","allMovies","changeRowsPerPage","on_request_sort","property","sortByTitleOrRating","resetState"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {Component} from \"react\"\nimport {connect} from \"react-redux\"\n\nimport * as actionCreators from \"../../store/actions/globalActions\"\nimport {\n    ErrorMessage,\n    Page,\n    PageTitle,\n    SearchBar,\n    SearchBarContainer,\n    SearchResults\n} from \"../../styling/StyledComponents\";\nimport {Search as SearchIcon} from \"@material-ui/icons\"\nimport ResultsTable from \"../MovieSummariesTable/ResultsTable\";\nimport {TablePagination} from \"@material-ui/core\";\nimport {pageIconColor} from \"../../styling/mainTheme\";\n\ninterface SearchProps {\n    search_movies: (searchTerm: string) => void,\n    movieSummaries: [],\n    currentPage: number,\n    resultsTotal: number,\n    change_page: (event: any, newPage: number) => void,\n    all_movies: () => void,\n    change_rows_per_page: (event: any) => void,\n    on_request_sort: (event:any, property:any) => void,\n    clear_search_state: () => void,\n    rowsPerPage: number,\n    errorMessage: string,\n    apiError: boolean\n}\n\ninterface SearchState {\n    searchTerm: string\n}\n\nclass Search extends Component<SearchProps, SearchState> {\n    constructor(props: SearchProps) {\n        super(props);\n        this.state = {\n            searchTerm: \"\",\n        }\n    }\n\n    componentDidMount(): void {\n        this.props.all_movies()\n    }\n\n    componentWillUnmount(): void {\n        this.props.clear_search_state()\n    }\n\n    render() {\n        \n        return (\n\n            <Page data-testid=\"search-page\">\n                <PageTitle>\n                    Movies\n                </PageTitle>\n                <SearchBarContainer>\n\n                    <SearchIcon style={{color:`${pageIconColor}`, fontSize: 60}}/>\n\n                    <SearchBar\n                        variant=\"outlined\"\n                        type=\"search\"\n                        onChange={e => {\n                            this.setState(({searchTerm: e.target.value}))\n                            this.props.search_movies(e.target.value)\n                        }}\n                        label=\"Search by Title, Genre, Director, or Writer\"\n                    >\n                    </SearchBar>\n                </SearchBarContainer>\n                {this.props.resultsTotal > 0 &&\n                <SearchResults>\n                    <ResultsTable value=\"search\"/>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, 50]}\n                        component=\"div\"\n                        count={this.props.resultsTotal}\n                        rowsPerPage={this.props.rowsPerPage}\n                        page={this.props.currentPage}\n                        onChangePage={(e,newPage) => this.props.change_page(e, newPage)}\n                        onChangeRowsPerPage={(e) => this.props.change_rows_per_page(e)}\n                    />\n                </SearchResults>}\n                {(this.props.resultsTotal === 0 && ( this.state.searchTerm !== \"\" || this.props.apiError ) ) &&\n                <ErrorMessage>{this.props.errorMessage}</ErrorMessage>}\n            </Page>\n\n        )\n    }\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        searchTerm: state.searchTerm,\n        movieSummaries: state.movieSummaries,\n        searchResultsTotal: state.searchResultsTotal,\n        currentPage: state.currentPage,\n        rowsPerPage: state.rowsPerPage,\n        resultsTotal: state.searchResultsTotal,\n        errorMessage: state.errorMessage,\n        apiError: state.apiError,\n    }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        change_page: (event: any, newPage:number) => dispatch(actionCreators.changePage(event, newPage)),\n        search_movies: (searchTerm: string) => dispatch(actionCreators.searchMovies(searchTerm)),\n        all_movies: () => dispatch(actionCreators.allMovies()),\n        change_rows_per_page: (event: any) => dispatch(actionCreators.changeRowsPerPage(event)),\n        on_request_sort: (event:any, property:any) => dispatch(actionCreators.sortByTitleOrRating(event, property)),\n        clear_search_state: () => dispatch(actionCreators.resetState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);"]},"metadata":{},"sourceType":"module"}